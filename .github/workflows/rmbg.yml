name: Remove Background CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: pytest test/ -v
    
    - name: Build Docker image
      run: docker build -t rmbg .
    
    - name: Test Docker image
      run: |
        docker rm -f test-container || true
        
        docker run -d -p 5000:5000 --name test-container rmbg
        echo "Waiting for application to start..."
        timeout=60 # Maximum wait time in seconds
        interval=2 # Check every 2 seconds
        elapsed=0
        while ! curl -sf http://localhost:5000 > /dev/null; do
          if [ $elapsed -ge $timeout ]; then
            echo "Timeout waiting for application to start."
            docker logs test-container
            docker stop test-container
            exit 1
          fi
          sleep $interval
          elapsed=$((elapsed + interval))
          echo "Still waiting..."
        done
        echo "Application started!"
        docker logs test-container # Keep logs for inspection
        docker exec test-container ls -la /app
        docker exec test-container ls -la /app/templates || echo "templates dir missing"
        echo "Running curl test..."
        curl -v http://localhost:5000 # Now run the actual test curl
        docker stop test-container


  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
      
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      
    - name: Build and push Docker image to Artifact Registry
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/rmbg:${{ github.sha }} .
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/rmbg:${{ github.sha }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy rmbg \
          --image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/rmbg:${{ github.sha }} \
          --platform=managed \
          --region=${{ secrets.GCP_REGION }} \
          --allow-unauthenticated